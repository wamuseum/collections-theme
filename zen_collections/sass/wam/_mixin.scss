@mixin breakpoint($point) {
  @if $point == goldilocks {
    @media only screen and (min-width: 30em) { @content; }
  }
  @if $point == baby-bear {
    @media only screen and (min-width: 40em) { @content; }
  }
  @if $point == mama-bear {
    @media only screen and (min-width: 60em)  { @content; }
  }
  @if $point == papa-bear {
    @media only screen and (min-width: 90em) { @content; }
  }
  @if $point == supa-bear {
    @media only screen and (min-width: 120em) { @content; }
  }
}

@mixin max-image() {
  max-width: 100%;
  height: auto;
  width: auto\9; /* ie8 */
}

@mixin clearfix-micro() {
  & {
    *zoom: 1;
  }
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin wam-gradient($start, $end, $style: top) {
  background-color: $start;
  background-image: -webkit-linear-gradient($style, $start, $end);
  background-image:    -moz-linear-gradient($style, $start, $end);
  background-image:     -ms-linear-gradient($style, $start, $end);
  background-image:      -o-linear-gradient($style, $start, $end);
}



@mixin wam-font-heading($weight: 400, $transform: uppercase) {
  font-family: 'Oswald', sans-serif;
  font-weight: $weight;
  text-transform: $transform;
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}
